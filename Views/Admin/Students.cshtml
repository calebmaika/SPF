@model Alliance_Group_5_Project_Student_Performance_Tracker.ViewModels.StudentViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Student Management";
}

<div class="container-fluid px-4 py-4">
    <!-- Page Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="fw-bold mb-1">Student Management</h2>
            <p class="text-muted mb-0">Manage and organize your students</p>
        </div>
        <button class="btn btn-primary d-flex align-items-center gap-2 px-4" data-bs-toggle="modal" data-bs-target="#addStudentModal">
            <i class="bi bi-plus-circle"></i>
            <span>Add Student</span>
        </button>
    </div>

    <!-- Search and Filter Bar -->
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text bg-white border-end-0">
                            <i class="bi bi-search text-muted"></i>
                        </span>
                        <input type="text" class="form-control border-start-0 ps-0" id="searchInput" placeholder="Search by name, username, or grade level...">
                    </div>
                </div>
                <div class="col-md-3">
                    <select class="form-select" id="gradeFilter">
                        <option value="">All Grades</option>
                        <option value="grade 1">Grade 1</option>
                        <option value="grade 2">Grade 2</option>
                        <option value="grade 3">Grade 3</option>
                        <option value="grade 4">Grade 4</option>
                        <option value="grade 5">Grade 5</option>
                        <option value="grade 6">Grade 6</option>
                        <option value="grade 7">Grade 7</option>
                        <option value="grade 8">Grade 8</option>
                        <option value="grade 9">Grade 9</option>
                        <option value="grade 10">Grade 10</option>
                        <option value="grade 11">Grade 11</option>
                        <option value="grade 12">Grade 12</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <div class="d-flex align-items-center justify-content-end h-100">
                        <span class="text-muted">
                            <i class="bi bi-people-fill me-2"></i>
                            <span id="studentCount">@Model.Students.Count()</span> Students
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Students Grid -->
    <div class="row g-4" id="studentGrid">
        @foreach (var student in Model.Students)
        {
            <div class="col-xl-3 col-lg-4 col-md-6 student-card" 
                data-username="@student.Username.ToLower()" 
                data-name="@(student.FirstName + " " + student.LastName).ToLower()" 
                data-grade="@student.GradeLevel.ToLower()">
                <div class="card border-0 shadow-sm h-100 hover-lift">
                    <div class="card-body">
                        <div class="d-flex align-items-start justify-content-between mb-3">
                            <div class="avatar-circle bg-success bg-opacity-10 text-success">
                                @student.FirstName.Substring(0, 1)@student.LastName.Substring(0, 1)
                            </div>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-light border-0" type="button" data-bs-toggle="dropdown">
                                    <i class="bi bi-three-dots-vertical"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end shadow-sm">
                                    <li>
                                        <button type="button" class="dropdown-item" 
                                                data-bs-toggle="modal" 
                                                data-bs-target="#editStudentModal"
                                                onclick="loadStudentData(@student.Id)">
                                            <i class="bi bi-pencil me-2"></i>Edit
                                        </button>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form asp-action="DeleteStudent" asp-route-id="@student.Id" method="post" class="delete-form">
                                            <button type="submit" class="dropdown-item text-danger">
                                                <i class="bi bi-trash me-2"></i>Delete
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        
                        <h5 class="fw-bold mb-1">@student.FirstName @student.LastName</h5>
                        <p class="text-muted small mb-3">@@@student.Username</p>
                        
                        <div class="d-flex flex-column gap-2">
                            <div class="d-flex align-items-center text-muted small">
                                <i class="bi bi-mortarboard me-2"></i>
                                <span>@student.GradeLevel</span>
                            </div>
                            <div class="d-flex align-items-center text-muted small">
                                <i class="bi bi-calendar-event me-2"></i>
                                <span>Age @student.Age</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Empty State -->
    <div class="text-center py-5 d-none" id="emptyState">
        <i class="bi bi-search text-muted" style="font-size: 3rem;"></i>
        <h5 class="text-muted mt-3">No students found</h5>
        <p class="text-muted">Try adjusting your search or filter criteria</p>
    </div>
</div>

<!-- Add Student Modal -->
<div class="modal fade" id="addStudentModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header border-0 pb-0">
                <div>
                    <h5 class="modal-title fw-bold">Add New Student</h5>
                    <p class="text-muted small mb-0">Fill in the student's information</p>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body pt-3">
                <form asp-action="AddStudent" method="post">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label fw-semibold small">Username</label>
                            <input asp-for="NewStudent.Username" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-semibold small">Password</label>
                            <input asp-for="NewStudent.Password" type="password" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-semibold small">First Name</label>
                            <input asp-for="NewStudent.FirstName" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-semibold small">Last Name</label>
                            <input asp-for="NewStudent.LastName" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-semibold small">Age</label>
                            <input asp-for="NewStudent.Age" type="number" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-semibold small">Grade Level</label>
                            <select asp-for="NewStudent.GradeLevel" class="form-select" required>
                                <option value="">Select Grade Level</option>
                                <option value="Grade 1">Grade 1</option>
                                <option value="Grade 2">Grade 2</option>
                                <option value="Grade 3">Grade 3</option>
                                <option value="Grade 4">Grade 4</option>
                                <option value="Grade 5">Grade 5</option>
                                <option value="Grade 6">Grade 6</option>
                                <option value="Grade 7">Grade 7</option>
                                <option value="Grade 8">Grade 8</option>
                                <option value="Grade 9">Grade 9</option>
                                <option value="Grade 10">Grade 10</option>
                                <option value="Grade 11">Grade 11</option>
                                <option value="Grade 12">Grade 12</option>
                            </select>
                        </div>
                    </div>
                    <div class="mt-4 d-flex gap-2">
                        <button type="button" class="btn btn-light flex-fill" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary flex-fill">
                            <i class="bi bi-check-circle me-2"></i>Add Student
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Student Modal -->
<div class="modal fade" id="editStudentModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header border-0 pb-0">
                <div>
                    <h5 class="modal-title fw-bold">Edit Student</h5>
                    <p class="text-muted small mb-0">Update the student's information</p>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body pt-3">
                <form asp-action="EditStudent" method="post">
                    <input type="hidden" id="editStudentId" name="Id" />
                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label fw-semibold small">Username</label>
                            <input id="editUsername" name="Username" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-semibold small">Password</label>
                            <input id="editPassword" name="Password" type="password" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-semibold small">First Name</label>
                            <input id="editFirstName" name="FirstName" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-semibold small">Last Name</label>
                            <input id="editLastName" name="LastName" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-semibold small">Age</label>
                            <input id="editAge" name="Age" type="number" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-semibold small">Grade Level</label>
                            <select id="editGradeLevel" name="GradeLevel" class="form-select" required>
                                <option value="">Select Grade Level</option>
                                <option value="Grade 1">Grade 1</option>
                                <option value="Grade 2">Grade 2</option>
                                <option value="Grade 3">Grade 3</option>
                                <option value="Grade 4">Grade 4</option>
                                <option value="Grade 5">Grade 5</option>
                                <option value="Grade 6">Grade 6</option>
                                <option value="Grade 7">Grade 7</option>
                                <option value="Grade 8">Grade 8</option>
                                <option value="Grade 9">Grade 9</option>
                                <option value="Grade 10">Grade 10</option>
                                <option value="Grade 11">Grade 11</option>
                                <option value="Grade 12">Grade 12</option>
                            </select>
                        </div>
                    </div>
                    <div class="mt-4 d-flex gap-2">
                        <button type="button" class="btn btn-light flex-fill" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-warning flex-fill">
                            <i class="bi bi-save me-2"></i>Update Student
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .hover-lift {
        transition: all 0.3s ease;
    }
    
    .hover-lift:hover {
        transform: translateY(-5px);
        box-shadow: 0 0.5rem 1.5rem rgba(0, 0, 0, 0.15) !important;
    }
    
    .avatar-circle {
        width: 48px;
        height: 48px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 1.1rem;
    }
    
    .form-control:focus, .form-select:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.15);
    }
    
    .input-group-text {
        background-color: transparent;
    }
    
    .delete-form {
        margin: 0;
    }
    
    .dropdown-menu {
        border: none;
        min-width: 160px;
    }
    
    .dropdown-item {
        padding: 0.5rem 1rem;
        transition: all 0.2s ease;
    }
    
    .dropdown-item:hover {
        background-color: #f8f9fa;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const gradeFilter = document.getElementById('gradeFilter');
            const studentCards = document.querySelectorAll('.student-card');
            const studentCount = document.getElementById('studentCount');
            const emptyState = document.getElementById('emptyState');
            const studentGrid = document.getElementById('studentGrid');
            
            function filterStudents() {
                const searchTerm = searchInput.value.toLowerCase();
                const selectedGrade = gradeFilter.value.toLowerCase();
                let visibleCount = 0;
                
                studentCards.forEach(card => {
                    const username = card.dataset.username;
                    const name = card.dataset.name;
                    const grade = card.dataset.grade;
                    
                    const matchesSearch = username.includes(searchTerm) || 
                                        name.includes(searchTerm) || 
                                        grade.includes(searchTerm);
                    const matchesGrade = selectedGrade === '' || grade === selectedGrade;
                    
                    if (matchesSearch && matchesGrade) {
                        card.classList.remove('d-none');
                        visibleCount++;
                    } else {
                        card.classList.add('d-none');
                    }
                });
                
                studentCount.textContent = visibleCount;
                
                if (visibleCount === 0) {
                    studentGrid.classList.add('d-none');
                    emptyState.classList.remove('d-none');
                } else {
                    studentGrid.classList.remove('d-none');
                    emptyState.classList.add('d-none');
                }
            }
            
            searchInput.addEventListener('input', filterStudents);
            gradeFilter.addEventListener('change', filterStudents);
            
            // Confirm delete
            document.querySelectorAll('.delete-form').forEach(form => {
                form.addEventListener('submit', function(e) {
                    if (!confirm('Are you sure you want to delete this student?')) {
                        e.preventDefault();
                    }
                });
            });
        });
        
        function loadStudentData(studentId) {
            fetch(`/Admin/GetStudent?id=${studentId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(student => {
                    // Populate the edit form with student data
                    document.getElementById('editStudentId').value = student.id;
                    document.getElementById('editUsername').value = student.username;
                    document.getElementById('editPassword').value = student.password;
                    document.getElementById('editFirstName').value = student.firstName;
                    document.getElementById('editLastName').value = student.lastName;
                    document.getElementById('editAge').value = student.age;
                    
                    // Set the selected grade level in dropdown
                    const gradeSelect = document.getElementById('editGradeLevel');
                    gradeSelect.value = student.gradeLevel;
                })
                .catch(error => {
                    console.error('Error loading student data:', error);
                    alert('Error loading student data. Please try again.');
                });
        }
    </script>
}